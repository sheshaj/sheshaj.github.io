{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","AppRoutingModule","forRoot","imports","AppComponent","http","title","total","recovered","newConfirmed","active","deceased","getTheData","callTheAPIAtInterval","setInterval","get","subscribe","totalData","stateWiseUpdatedData","confirmed","deltaconfirmed","newRecovered","deltarecovered","newDeceased","deltadeaths","deaths","data","stateWiseData","stateData","filterData","filter","statecode","lastUpdated","dateWithoutPattern","lastupdatedtime","split","lastUpdatedTimeFormatted","timeDifference","Date","getTime","lastUpdatedInHOrM","timeIn","parseInt","stateName","state","districtData","filterDistrictData","selector","templateUrl","styleUrls","AppModule","declarations","providers","bootstrap","environment","production","bootstrapModule","err","console","error"],"mappings":";;;;;;;;;;;;;;;;;AAAA,aAASA,wBAAT,CAAkCC,GAAlC,EAAuC;AACtC;AACA;AACA,aAAOC,OAAO,CAACC,OAAR,GAAkBC,IAAlB,CAAuB,YAAW;AACxC,YAAIC,CAAC,GAAG,IAAIC,KAAJ,CAAU,yBAAyBL,GAAzB,GAA+B,GAAzC,CAAR;AACAI,SAAC,CAACE,IAAF,GAAS,kBAAT;AACA,cAAMF,CAAN;AACA,OAJM,CAAP;AAKA;;AACDL,4BAAwB,CAACQ,IAAzB,GAAgC,YAAW;AAAE,aAAO,EAAP;AAAY,KAAzD;;AACAR,4BAAwB,CAACG,OAAzB,GAAmCH,wBAAnC;AACAS,UAAM,CAACC,OAAP,GAAiBV,wBAAjB;AACAA,4BAAwB,CAACW,EAAzB,GAA8B,yCAA9B;;;;;;;;;;;;;;;;ACZA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAIA,QAAMC,MAAM,GAAW,EAAvB;;QAMaC,gB;;;;;YAAAA;;;;yBAAAA,gB;AAAgB,O;AAAA,gBAHlB,CAAC,6DAAaC,OAAb,CAAqBF,MAArB,CAAD,CAGkB,EAFjB,4DAEiB;;;;0HAAhBC,gB,EAAgB;AAAA;AAAA,kBAFjB,4DAEiB;AAAA,O;AAFL,K;;;;;sEAEXA,gB,EAAgB;cAJ5B,sDAI4B;eAJnB;AACRE,iBAAO,EAAE,CAAC,6DAAaD,OAAb,CAAqBF,MAArB,CAAD,CADD;AAERF,iBAAO,EAAE,CAAC,4DAAD;AAFD,S;AAImB,Q;;;;;;;;;;;;;;;;;;ACV7B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;AC4BI;;AAA8E;;AAAmB;;;;;;AAAjD;;AAA8B;;AAAA;;;;;;AAGhF;;AAA6C;;AAAmE;;;;;;AAAnE;;AAAA;;;;;;AAYd;;AACvB;;AAA6B;;;;;;AAA7B;;AAAA;;;;;;AAEsB;;AACtB;;AAA6B;;;;;;AAA7B;;AAAA;;;;;;AACqB;;AACrB;;AAA4B;;;;;;AAA5B;;AAAA;;;;;;AARN;;AACE;;AAAI;;AAAqB;;AACzB;;AAAI;;AAAuB;;AACa;;AACxC;;AAAI;;AAAmB;;AACvB;;AAAI;;AAAsB;;AACc;;AACxC;;AAAI;;AAAqB;;AAEzB;;AACF;;;;;;AATM;;AAAA;;AACA;;AAAA;;AAA6B;;AAAA;;AAE7B;;AAAA;;AACA;;AAAA;;AAA4B;;AAAA;;AAE5B;;AAAA;;AAA2B;;AAAA;;;;;;AAfnC;;AACE;;AACE;;AAAI;;AAAQ;;AACZ;;AAAI;;AAAS;;AACb;;AAAI;;AAAM;;AACV;;AAAI;;AAAS;;AACb;;AAAI;;AAAQ;;AACd;;AACA;;AAWF;;;;;;AAXM;;AAAA;;;;QDjCKM,Y;AAeX,4BAAoBC,IAApB,EAAsC;AAAA;;AAAlB,aAAAA,IAAA,GAAAA,IAAA;AAdpB,aAAAC,KAAA,GAAQ,oBAAR;AAcyC;;;;mCAE9B;AACT,eAAKC,KAAL,GAAa,CAAb;AACA,eAAKC,SAAL,GAAiB,CAAjB;AACA,eAAKC,YAAL,GAAoB,CAApB;AACA,eAAKC,MAAL,GAAc,CAAd;AACA,eAAKC,QAAL,GAAgB,CAAhB;AACA,eAAKC,UAAL;AACA,eAAKC,oBAAL;AACD;;;+CAEsB;AAAA;;AACrBC,qBAAW,CAAC,YAAM;AAChB,iBAAI,CAACF,UAAL;AACD,WAFU,EAER,OAAO,EAAP,GAAY,CAFJ,CAAX;AAGD;;;qCAEY;AAAA;;AACX,eAAKP,IAAL,CAAUU,GAAV,CAAc,wCAAd,EAAwDC,SAAxD,CAAkE,UAACC,SAAD,EAAe;AAC/E,kBAAI,CAACC,oBAAL,GAA4BD,SAAS,CAAC,WAAD,CAArC;AACA,kBAAI,CAACV,KAAL,GAAaU,SAAS,CAAC,WAAD,CAAT,CAAuB,CAAvB,EAA0BE,SAAvC;AACA,kBAAI,CAACV,YAAL,GAAoBQ,SAAS,CAAC,WAAD,CAAT,CAAuB,CAAvB,EAA0BG,cAA9C;AACA,kBAAI,CAACZ,SAAL,GAAiBS,SAAS,CAAC,WAAD,CAAT,CAAuB,CAAvB,EAA0BT,SAA3C;AACA,kBAAI,CAACa,YAAL,GAAoBJ,SAAS,CAAC,WAAD,CAAT,CAAuB,CAAvB,EAA0BK,cAA9C;AACA,kBAAI,CAACC,WAAL,GAAmBN,SAAS,CAAC,WAAD,CAAT,CAAuB,CAAvB,EAA0BO,WAA7C;AACA,kBAAI,CAACd,MAAL,GAAcO,SAAS,CAAC,WAAD,CAAT,CAAuB,CAAvB,EAA0BP,MAAxC;AACA,kBAAI,CAACC,QAAL,GAAgBM,SAAS,CAAC,WAAD,CAAT,CAAuB,CAAvB,EAA0BQ,MAA1C,CAR+E,CAS/E;AACD,WAVD;AAYA,eAAKpB,IAAL,CAAUU,GAAV,CAAc,0DAAd,EAA0EC,SAA1E,CAAoF,UAACU,IAAD,EAAU;AAC5F,kBAAI,CAACC,aAAL,GAAqBD,IAArB;AACD,WAFD;AAGD;;;2CAEkBE,S,EAAW;AAC5B,cAAMC,UAAU,GAAG,KAAKF,aAAL,CAAmBG,MAAnB,CAA0B,UAACJ,IAAD,EAAU;AACrD,mBAAQA,IAAI,CAACK,SAAL,KAAmBH,SAA3B;AACD,WAFkB,CAAnB;AAGA,cAAMI,WAAW,GAAG,KAAKd,oBAAL,CAA0BY,MAA1B,CAAiC,UAACJ,IAAD,EAAU;AAC7D,mBAAQA,IAAI,CAACK,SAAL,KAAmBH,SAA3B;AACD,WAFmB,CAApB;AAGA,cAAMK,kBAAkB,GAAGD,WAAW,CAAC,CAAD,CAAX,CAAeE,eAAf,CAA+BC,KAA/B,CAAqC,GAArC,EAA0C,CAA1C,CAA3B;AACA,cAAMC,wBAAwB,GAAGH,kBAAkB,CAACE,KAAnB,CAAyB,GAAzB,EAA8B,CAA9B,IAAmC,GAAnC,GAAyCF,kBAAkB,CAACE,KAAnB,CAAyB,GAAzB,EAA8B,CAA9B,CAAzC,GAC/B,GAD+B,GACzBF,kBAAkB,CAACE,KAAnB,CAAyB,GAAzB,EAA8B,CAA9B,CADyB,GACU,GADV,GACgBH,WAAW,CAAC,CAAD,CAAX,CAAeE,eAAf,CAA+BC,KAA/B,CAAqC,GAArC,EAA0C,CAA1C,CADjD;AAEA,cAAME,cAAc,GAAG,IAAIC,IAAJ,GAAWC,OAAX,KAAuB,IAAID,IAAJ,CAASF,wBAAT,EAAmCG,OAAnC,EAA9C;AACA,cAAIC,iBAAJ;AACA,cAAIC,MAAM,GAAG,EAAb;;AACA,cAAIJ,cAAc,IAAI,OAAO,EAAX,CAAd,GAA+B,EAAnC,EAAuC;AACrCG,6BAAiB,GAAGH,cAAc,IAAI,OAAO,EAAP,GAAY,EAAhB,CAAlC;AACAI,kBAAM,GAAGD,iBAAiB,IAAI,CAArB,GAAyB,OAAzB,GAAmC,MAA5C;AACD,WAHD,MAGO;AACLA,6BAAiB,GAAGH,cAAc,IAAI,OAAO,EAAX,CAAlC;AACAI,kBAAM,GAAGD,iBAAiB,IAAI,CAArB,GAAyB,SAAzB,GAAqC,QAA9C;AACD;;AACD,eAAKR,WAAL,GAAmBU,QAAQ,CAACF,iBAAD,CAAR,GAA8B,GAA9B,GAAoCC,MAAvD;AACA,eAAKE,SAAL,GAAiBd,UAAU,CAAC,CAAD,CAAV,CAAce,KAA/B;AACA,eAAKC,YAAL,GAAoBhB,UAAU,CAAC,CAAD,CAAV,CAAcgB,YAAlC;AACD;;;;;;;uBA1EUzC,Y,EAAY,gI;AAAA,K;;;YAAZA,Y;AAAY,+B;AAAA,e;AAAA,c;AAAA,ob;AAAA;AAAA;ACRzB;;AACE;;AAAI;;AAAwB;;AAC5B;;AAAM;;AACN;;AAAwB;;AACtB;;AAAyB;;AAAkB;;AAC7C;;AACA;;AAA8B;;AAAwB;;AACtD;;AAA0B;;AACxB;;AAAyB;;AAAkB;;AAAO;;AACpD;;AAAyB;;AACvB;;AAAyB;;AAAiB;;AAAO;;AAgBnD;;AAAQ;AAAA,mBAAU,IAAA0C,kBAAA,qBAAV;AAAiD,WAAjD;;AACN;;AAA+B;;AAAc;;AAC7C;;AACF;;AAEA;;AAEA;;AAoBF;;;;AAlD0B;;AAAA;;AACG;;AAAA;;AAEG;;AAAA;;AACJ;;AAAA;;AACC;;AAAA;;AACF;;AAAA;;AACE;;AAAA;;AAkBjB;;AAAA;;AAGe;;AAAA;;AAElB;;AAAA;;;;;;;;;sEDzBI1C,Y,EAAY;cALxB,uDAKwB;eALd;AACT2C,kBAAQ,EAAE,UADD;AAETC,qBAAW,EAAE,sBAFJ;AAGTC,mBAAS,EAAE,CAAC,sBAAD;AAHF,S;AAKc,Q;;;;;;;;;;;;;;;;;;;;;;AERzB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAmBaC,S;;;;;YAAAA,S;AAAS,kBAFR,2DAEQ;;;;yBAATA,S;AAAS,O;AAAA,iBAHT,E;AAAE,gBALJ,CACP,uEADO,EAEP,oEAFO,EAGP,qEAHO,CAKI;;;;0HAGFA,S,EAAS;AAAA,uBAVlB,2DAUkB;AAVN,kBAGZ,uEAHY,EAIZ,oEAJY,EAKZ,qEALY;AAUM,O;AALF,K;;;;;sEAKPA,S,EAAS;cAZrB,sDAYqB;eAZZ;AACRC,sBAAY,EAAE,CACZ,2DADY,CADN;AAIRhD,iBAAO,EAAE,CACP,uEADO,EAEP,oEAFO,EAGP,qEAHO,CAJD;AASRiD,mBAAS,EAAE,EATH;AAURC,mBAAS,EAAE,CAAC,2DAAD;AAVH,S;AAYY,Q;;;;;;;;;;;;;;;;;;ACnBtB;AAAA;;;AAAA;AAAA;AAAA,O,CAAA;AACA;AACA;;;AAEO,QAAMC,WAAW,GAAG;AACzBC,gBAAU,EAAE;AADa,KAApB;AAIP;;;;;;;AAOA;;;;;;;;;;;;;;;;;ACfA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAMA,QAAI,sEAAYA,UAAhB,EAA4B;AAC1B;AACD;;AAED,gFAAyBC,eAAzB,CAAyC,yDAAzC,WACS,UAAAC,GAAG;AAAA,aAAIC,OAAO,CAACC,KAAR,CAAcF,GAAd,CAAJ;AAAA,KADZ","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent implements OnInit {\n  title = 'corona-tracker-app';\n  stateWiseData;\n  districtData;\n  total;\n  newConfirmed;\n  recovered;\n  active;\n  deceased;\n  newRecovered;\n  newDeceased;\n  lastUpdated;\n  stateWiseUpdatedData;\n  stateName;\n\n  constructor(private http: HttpClient) { }\n\n  ngOnInit() {\n    this.total = 0;\n    this.recovered = 0;\n    this.newConfirmed = 0;\n    this.active = 0;\n    this.deceased = 0;\n    this.getTheData();\n    this.callTheAPIAtInterval();\n  }\n\n  callTheAPIAtInterval() {\n    setInterval(() => {\n      this.getTheData();\n    }, 1000 * 60 * 5);\n  }\n\n  getTheData() {\n    this.http.get('https://api.covid19india.org/data.json').subscribe((totalData) => {\n      this.stateWiseUpdatedData = totalData['statewise'];\n      this.total = totalData['statewise'][0].confirmed;\n      this.newConfirmed = totalData['statewise'][0].deltaconfirmed;\n      this.recovered = totalData['statewise'][0].recovered;\n      this.newRecovered = totalData['statewise'][0].deltarecovered;\n      this.newDeceased = totalData['statewise'][0].deltadeaths;\n      this.active = totalData['statewise'][0].active;\n      this.deceased = totalData['statewise'][0].deaths;\n      // this.lastUpdated = totalData['statewise'][0].lastupdatedtime;\n    })\n\n    this.http.get('https://api.covid19india.org/v2/state_district_wise.json').subscribe((data) => {\n      this.stateWiseData = data;\n    })\n  }\n\n  filterDistrictData(stateData) {\n    const filterData = this.stateWiseData.filter((data) => {\n      return (data.statecode === stateData)\n    });\n    const lastUpdated = this.stateWiseUpdatedData.filter((data) => {\n      return (data.statecode === stateData)\n    })\n    const dateWithoutPattern = lastUpdated[0].lastupdatedtime.split(' ')[0];\n    const lastUpdatedTimeFormatted = dateWithoutPattern.split('/')[2] + '-' + dateWithoutPattern.split('/')[1] +\n      '-' + dateWithoutPattern.split('/')[0] + ' ' + lastUpdated[0].lastupdatedtime.split(' ')[1];\n    const timeDifference = new Date().getTime() - new Date(lastUpdatedTimeFormatted).getTime();\n    let lastUpdatedInHOrM;\n    let timeIn = '';\n    if (timeDifference / (1000 * 60) > 60) {\n      lastUpdatedInHOrM = timeDifference / (1000 * 60 * 60);\n      timeIn = lastUpdatedInHOrM >= 2 ? 'Hours' : 'Hour';\n    } else {\n      lastUpdatedInHOrM = timeDifference / (1000 * 60);\n      timeIn = lastUpdatedInHOrM >= 2 ? 'Minutes' : 'Minute';\n    }\n    this.lastUpdated = parseInt(lastUpdatedInHOrM) + ' ' + timeIn;\n    this.stateName = filterData[0].state;\n    this.districtData = filterData[0].districtData;\n  }\n\n}\n","<div style=\"margin-top: 2%\">\n  <h2>Covid-19 Tracking Portal</h2>\n  <br /><br />\n  <h3 style=\"color: red;\">Total Cases: {{total}}\n    <span class=\"font-16-px\">+ {{newConfirmed}}</span>\n  </h3>\n  <h3 style=\"color: orangered;\">Total Active: {{active}}</h3>\n  <h3 style=\"color: green;\">Total Recovered: {{recovered}}\n    <span class=\"font-16-px\">+ {{newRecovered}}</span></h3>\n  <h3 style=\"color: grey;\">Total Deceased: {{deceased}}\n    <span class=\"font-16-px\">+ {{newDeceased}}</span></h3>\n  <!-- <table class=\"total-data-table\">\n  <tr>\n    <th>Total Cases</th>\n    <th>Active</th>\n    <th>Total Recovered</th>\n    <th>Deceased</th>\n  </tr>\n  <tr>\n    <td>{{total}}</td>\n    <td>{{active}}</td>\n    <td>{{recovered}}</td>\n    <td>{{deceased}}</td>\n  </tr>\n</table> -->\n\n  <select (change)=\"filterDistrictData($event.target.value)\" class=\"select-css\">\n    <option value=\"Select a state\">Select a state</option>\n    <option *ngFor=\"let stateData of stateWiseData\" value={{stateData.statecode}}>{{stateData.state}}</option>\n  </select>\n\n  <h5 style=\"color: grey;\" *ngIf=\"lastUpdated\">{{stateName}} state data was last updated about {{lastUpdated}} ago</h5>\n\n  <table *ngIf=\"districtData\" class=\"data-table\">\n    <tr>\n      <th>District</th>\n      <th>Confirmed</th>\n      <th>Active</th>\n      <th>Recovered</th>\n      <th>Deceased</th>\n    </tr>\n    <tr *ngFor=\"let distData of districtData\">\n      <td>{{distData.district}}</td>\n      <td>{{distData.confirmed}} <span *ngIf=\"distData.delta.confirmed>0\" class=\"font-12-px\">\n          ↑{{distData.delta.confirmed}}</span></td>\n      <td>{{distData.active}}</td>\n      <td>{{distData.recovered}}<span *ngIf=\"distData.delta.recovered>0\" class=\"font-12-px\">\n          ↑{{distData.delta.recovered}}</span></td>\n      <td>{{distData.deceased}}<span *ngIf=\"distData.delta.deceased>0\" class=\"font-12-px\">\n          ↑{{distData.delta.deceased}}</span>\n      </td>\n    </tr>\n  </table>\n</div>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { HttpClientModule } from '@angular/common/http';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}